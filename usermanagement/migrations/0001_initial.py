# Generated by Django 2.2.5 on 2019-11-06 11:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import usermanagement.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_reset', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', usermanagement.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Usertypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Role_id', models.PositiveSmallIntegerField(choices=[(1, 'Lab Technician'), (2, 'Receptionist'), (3, 'Admin/Operational staff'), (4, 'Pharmacist'), (5, 'Nursing Staff'), (6, 'Physician'), (7, 'Patient/Customer')])),
            ],
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('doc', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_booked', models.CharField(default='no', max_length=4)),
                ('speciality', models.CharField(max_length=100)),
                ('Experience', models.CharField(max_length=100)),
                ('Licence_number', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=300)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(max_length=30)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('reset_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('Qualification', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='usermanagement.Usertypes')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('UHID', models.SlugField(editable=False, primary_key=True, serialize=False)),
                ('is_refered', models.BooleanField(default=False)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=50, null=True)),
                ('maritial_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.CharField(max_length=50, null=True)),
                ('address', models.CharField(max_length=150)),
                ('address2', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=50, null=True)),
                ('emergencycontactfname', models.CharField(blank=True, max_length=50, null=True)),
                ('emergencycontactlname', models.CharField(blank=True, max_length=50, null=True)),
                ('emergencycontactno', models.CharField(blank=True, max_length=50, null=True)),
                ('emergencyrelationship', models.CharField(blank=True, max_length=200, null=True)),
                ('familyDoctorName', models.CharField(blank=True, max_length=50, null=True)),
                ('familycontactno', models.CharField(blank=True, max_length=50, null=True)),
                ('reason', models.CharField(blank=True, max_length=300, null=True)),
                ('created_date', models.DateField(default=datetime.date(2019, 11, 6), null=True)),
                ('pat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Profile')),
                ('doc_link', models.ManyToManyField(null=True, to='usermanagement.Doctors')),
            ],
        ),
        migrations.CreateModel(
            name='CBC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.TextField()),
                ('referenceminvalue', models.FloatField()),
                ('referencemaxvalue', models.FloatField()),
                ('units', models.TextField()),
                ('created_date', models.CharField(blank=True, max_length=100, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacist',
            fields=[
                ('pharma_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('licence_number', models.CharField(max_length=100)),
                ('pro', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('nurse_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('speciality', models.CharField(max_length=100)),
                ('experience', models.CharField(max_length=100)),
                ('licence_number', models.CharField(max_length=100)),
                ('pro', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Laboratorist',
            fields=[
                ('lab_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('licence_number', models.CharField(max_length=100)),
                ('pro', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='doctors',
            name='pro',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='usermanagement.Profile'),
        ),
    ]
